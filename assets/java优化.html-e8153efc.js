import{_ as n,V as s,W as a,X as t}from"./framework-80dbfac3.js";const p="/learn_algorithm/assets/image-31-23f25ad3.png",e="/learn_algorithm/assets/image-9d102d1c.png",i="/learn_algorithm/assets/image-1-9c6b49ae.png",o="/learn_algorithm/assets/image-30-bd449ab7.png",c="/learn_algorithm/assets/image-32-3e2a2c81.png",l={},u=t(`<ul><li><p>正则表达式性能要低。</p></li><li><p>lambda比正常写性能要低</p></li><li><p>swap</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// a = a ^ b;</span>
<span class="token comment">// b = a ^ b;</span>
<span class="token comment">// a = a ^ b;</span>

a <span class="token operator">^=</span> b<span class="token punctuation">;</span>
b <span class="token operator">^=</span> a<span class="token punctuation">;</span>
a <span class="token operator">^=</span> b<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是数组不可直接写，会在异或相等元素时出问题。上面可以是因为a、b是两个变量，而nums[i] 只有一个变量。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// public void swap(int[] nums, int i, int j) {</span>
<span class="token comment">//     nums[i] = nums[i] ^ nums[j];    // x = x ^ x = 0</span>
<span class="token comment">//     nums[j] = nums[i] ^ nums[j];    // x = 0 ^ 0 = 0</span>
<span class="token comment">//     nums[i] = nums[i] ^ nums[j];    // x = 0 ^ 0 = 0</span>
<span class="token comment">// }</span>

<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">==</span> j<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
    nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>大小</p><p><img src="`+p+'" alt="alt text"></p></li><li><p>String转char一次写</p><p><img src="'+e+'" alt="alt text"></p></li><li><p>map优化：判断包含则返回，不包含则放，可以用put的返回值判断；当不需要value时，放固定对象；</p><p><img src="'+i+'" alt="alt text"></p><p><img src="'+o+'" alt="alt text"></p></li><li><p>数组转几何</p><p><img src="'+c+'" alt="alt text"></p></li></ul>',1),r=[u];function m(d,k){return s(),a("div",null,r)}const b=n(l,[["render",m],["__file","java优化.html.vue"]]);export{b as default};
